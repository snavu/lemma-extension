var background=function(){"use strict";var l,f;function d(r){return r==null||typeof r=="function"?{main:r}:r}const u=(f=(l=globalThis.browser)==null?void 0:l.runtime)!=null&&f.id?globalThis.browser:globalThis.chrome,p=d(()=>{console.log("Hello background!",{id:u.runtime.id}),u.runtime.onMessage.addListener((r,n,t)=>{var o;if(console.log("Received message from content script:",r),console.log("webContent:",r.webContent),console.log("webAttributes:",r.webAttributes),r.type==="askQuestion")return m(r.webContent,r.query,r.prevMessages,((o=r.webAttributes)==null?void 0:o.url)||"").then(e=>{t({answer:e})}),!0;if(r.type==="saveNote")return h(r.webAttributes.text,r.title,r.webAttributes.url).then(e=>{t({success:e})}),!0})});async function m(r,n,t,o){console.log("Sending query to Lemma:",{webContent:r,query:n,prevMessages:t,url:o});try{const e=await fetch("http://localhost:3001/api/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({webContent:r,query:n,prevMessages:t,url:o})});if(!e.ok)return console.error("HTTP error:",e.status,e.statusText),e.status===404?"Error: API endpoint not found. Make sure the Lemma server is running with the correct routes.":`Error: Server responded with ${e.status} ${e.statusText}`;const s=await e.text();if(!s)return console.error("Empty response from server"),"Error: Empty response from server";let i;try{i=JSON.parse(s)}catch{return console.error("Failed to parse JSON response:",s),"Error: Invalid response format from server"}return console.log("Response from Lemma:",i),i.answer||"No answer received from server"}catch(e){return console.error("Error calling Lemma API:",e),"Error: Could not connect to Lemma"}}async function h(r,n,t){console.log("Saving note to Lemma:",{webContent:r,title:n,URL:t});try{const o=await fetch("http://localhost:3001/api/save-note",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({webContent:r,title:n,url:t})});if(!o.ok)return console.error("HTTP error:",o.status,o.statusText),o.status===404?(console.error("Error: API endpoint not found. Make sure the Lemma server is running with the correct routes."),!1):(console.error(`Error: Server responded with ${o.status} ${o.statusText}`),!1);const e=await o.text();if(!e)return console.error("Empty response from server"),!1;let s;try{s=JSON.parse(e)}catch{return console.error("Failed to parse JSON response:",e),!1}return console.log("Response from Lemma save-note:",s),s.success!==!1}catch(o){return console.error("Error calling Lemma save-note API:",o),!1}}function y(){}function a(r,...n){}const b={debug:(...r)=>a(console.debug,...r),log:(...r)=>a(console.log,...r),warn:(...r)=>a(console.warn,...r),error:(...r)=>a(console.error,...r)};let c;try{c=p.main(),c instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(r){throw b.error("The background crashed on startup!"),r}return c}();
background;
